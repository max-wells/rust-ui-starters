use leptos::*;
use serde_json::Value;

use crate::registry::{
    demos::demo_visualizations::demo_chart_radar::DemoChartRadar,
    icons::others::{code::CodeIcon, eye::Eye},
    primitives::p_tabs::{PrimitiveTabsContent, PrimitiveTabsList, PrimitiveTabsRoot, PrimitiveTabsTrigger},
};

// * This file was auto-generated by the script build_mdx_demos

const JSON_CONTENT: &str = include_str!("../../../public/registry/styles/default/demo_chart_radar.json");

#[component]
pub fn MdxDemoChartRadar() -> impl IntoView {
    let parsed: Value = serde_json::from_str(JSON_CONTENT).unwrap();
    let file_content = parsed["files"][0]["content"]
        .as_str()
        .unwrap_or("")
        .to_string();

    let (file_content_signal, _set_file_content_signal) = create_signal(file_content);

    view! {
        <PrimitiveTabsRoot default_value="tab1">
            <PrimitiveTabsList attr:class=CLASS_TABS_LIST attr:aria-label="Rust UI - Preview and Code">
                <PrimitiveTabsTrigger attr:class=CLASS_TABS_TRIGGER value="tab1">
                    <Eye class="mr-2 size-4" />
                    "Preview"
                </PrimitiveTabsTrigger>
                <PrimitiveTabsTrigger attr:class=CLASS_TABS_TRIGGER value="tab2">
                    <CodeIcon class="mr-2 size-4" />
                    "Code"
                </PrimitiveTabsTrigger>
            </PrimitiveTabsList>

            <PrimitiveTabsContent attr:class=CLASS_TABS_CONTENT value="tab1">
                <div attr:class=CLASS_PREVIEW>
                    <DemoChartRadar />
                </div>

            </PrimitiveTabsContent>
            <PrimitiveTabsContent attr:class=CLASS_TABS_CONTENT value="tab2">
                <pre attr:class=CLASS_CODE>{move || file_content_signal.get().clone()}</pre>
            </PrimitiveTabsContent>
        </PrimitiveTabsRoot>
    }
}

/*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/
/*                      ✨ CONSTANTS ✨                       */
/*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/

const CLASS_PREVIEW: &str =
    "flex justify-center items-center w-full p-4 rounded-md border min-h-[370px] bg-background";

const CLASS_CODE: &str =
    "p-4 text-xs rounded-md border bg-card border-input h-fit max-h-[370px] w-full overflow-x-auto overflow-y-auto shortfix-sidenav-todo-properly";

//
//

const CLASS_TABS_LIST: &str =
    "inline-flex items-center justify-center text-muted-foreground bg-muted  h-10 rounded-md p-1";

const CLASS_TABS_TRIGGER: &str = "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm";

const CLASS_TABS_CONTENT: &str = "mt-2 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 ring-offset-background";
