{
  "name": "breadcrumb",
  "cargo_dependencies": [],
  "files": [
    {
      "name": "breadcrumb.rs",
      "content": "use leptos::*;\nuse tailwind_fuse::*;\n\nuse crate::registry::icons::{chevrons::chevron_right::ChevronRight, others::ellipsis::Ellipsis};\n\n#[component]\npub fn Breadcrumb(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| tw_merge!(\"\", class()));\n\n    view! {\n        <nav {..attributes} class=class aria-label=\"breadcrumb\">\n            {children()}\n        </nav>\n    }\n}\n\n#[component]\npub fn BreadcrumbList(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| {\n        tw_merge!(\n            \"flex flex-wrap gap-1 items-center text-sm break-words sm:gap-2 text-muted-foreground\",\n            class()\n        )\n    });\n\n    view! {\n        <ol {..attributes} class=class>\n            {children()}\n        </ol>\n    }\n}\n\n#[component]\npub fn BreadcrumbItem(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| tw_merge!(\"inline-flex gap-1 items-center\", class()));\n\n    view! {\n        <li {..attributes} class=class>\n            {children()}\n        </li>\n    }\n}\n\n#[component]\npub fn BreadcrumbLink(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(into, optional)] href: &'static str,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| tw_merge!(\"transition-colors hover:text-foreground\", class()));\n\n    view! {\n        <a {..attributes} class=class href=href>\n            {children()}\n        </a>\n    }\n}\n\n#[component]\npub fn BreadcrumbSeparator(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n) -> impl IntoView {\n    let class = create_memo(move |_| tw_merge!(\"[&amp;&gt;svg]:size-3.5\", class()));\n\n    view! {\n        <li {..attributes} class=class role=\"presentation\" aria-hidden=\"true\">\n            <ChevronRight class=\"size-4\" />\n        </li>\n    }\n}\n\n#[component]\npub fn BreadcrumbPage(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| tw_merge!(\"font-normal text-foreground\", class()));\n\n    view! {\n        <span {..attributes} class=class role=\"link\" aria-disabled=\"true\" aria-current=\"page\">\n            {children()}\n        </span>\n    }\n}\n\n#[component]\npub fn BreadcrumbEllipsis(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n) -> impl IntoView {\n    view! {\n        <button\n            type=\"button\"\n            id=\"radix-:R3n8qmfnnj7q6ja:\"\n            aria-haspopup=\"menu\"\n            aria-expanded=\"false\"\n            data-state=\"closed\"\n            class=\"flex gap-1 items-center\"\n        >\n            <span\n                class=\"flex justify-center items-center size-4\"\n                role=\"presentation\"\n                aria-hidden=\"true\"\n            >\n                <Ellipsis {..attributes} class=class />\n                <span class=\"sr-only\">More</span>\n            </span>\n            <span class=\"sr-only\">Toggle menu</span>\n        </button>\n    }\n}\n"
    }
  ],
  "type": "components:ui/",
  "type_short": "components:ui"
}