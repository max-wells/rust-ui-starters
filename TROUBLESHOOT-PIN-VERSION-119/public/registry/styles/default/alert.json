{
  "name": "alert",
  "cargo_dependencies": [],
  "files": [
    {
      "name": "alert.rs",
      "content": "use leptos::*;\nuse tailwind_fuse::*;\n\n#[component]\npub fn Alert(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| {\n        tw_merge!(\"relative p-4 mx-4 w-full rounded-lg border [&amp;&gt;svg+div]:translate-y-[-3px] [&amp;&gt;svg]:absolute [&amp;&gt;svg]:left-4 [&amp;&gt;svg]:top-4 [&amp;&gt;svg]:text-foreground [&amp;&gt;svg~*]:pl-7 bg-background text-foreground\", class())\n    });\n\n    view! {\n        <div {..attributes} class=class role=\"alert\">\n            {children()}\n        </div>\n    }\n}\n\n#[component]\npub fn AlertTitle(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class =\n        create_memo(move |_| tw_merge!(\"mb-1 font-medium tracking-tight leading-none\", class()));\n\n    view! {\n        <h4 {..attributes} class=class>\n            {children()}\n        </h4>\n    }\n}\n\n#[component]\npub fn AlertDescription(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| tw_merge!(\"text-sm [&amp;_p]:leading-relaxed\", class()));\n\n    view! {\n        <p {..attributes} class=class>\n            {children()}\n        </p>\n    }\n}\n"
    }
  ],
  "type": "components:ui/",
  "type_short": "components:ui"
}