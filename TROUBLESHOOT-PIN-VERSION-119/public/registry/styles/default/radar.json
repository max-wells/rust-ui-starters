{
  "name": "radar",
  "cargo_dependencies": [],
  "files": [
    {
      "name": "radar.rs",
      "content": "use leptos::*;\nuse tailwind_fuse::*;\n\n/*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n/*                     ✨ FUNCTIONS ✨                        */\n/*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n#[component]\npub fn Radar(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| {\n        tw_merge!(\n            \"flex overflow-hidden relative flex-col justify-center items-center space-y-4 w-full h-96\",\n            class()\n        )\n    });\n\n    view! {\n        <div {..attributes} class=class>\n            {children()}\n        </div>\n    }\n}\n\n#[component]\npub fn RadarLine(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    #[prop(into)] style: MaybeSignal<String>,\n) -> impl IntoView {\n    let class = create_memo(move |_| {\n        tw_merge!(\n            \"absolute inset-0 top-1/2 left-1/2 rounded-full border transform -translate-x-1/2 -translate-y-1/2 size-10 border-neutral-200\",\n            class()\n        )\n    });\n\n    view! { <div {..attributes} class=class style=style /> }\n}\n\n#[component]\npub fn RadarRow(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| {\n        tw_merge!(\n            \"flex justify-center items-center space-x-10 w-full md:justify-between md:space-x-0 mx-auto w-full\",\n            class()\n        )\n    });\n\n    view! {\n        <div {..attributes} class=class>\n            {children()}\n        </div>\n    }\n}\n\n#[component]\npub fn RadarLinesContainer(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| {\n        tw_merge!(\n            \"flex relative -bottom-12 justify-center items-center rounded-full size-20\",\n            class()\n        )\n    });\n\n    view! {\n        <div {..attributes} class=class>\n            {children()}\n        </div>\n    }\n}\n\n#[component]\npub fn RadarBottomLine(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n) -> impl IntoView {\n    let class = create_memo(move |_| {\n        tw_merge!(\n            \"absolute bottom-0 w-full h-px bg-gradient-to-r from-transparent to-transparent z-[41] via-slate-700\",\n            class()\n        )\n    });\n\n    view! { <div {..attributes} class=class /> }\n}\n\n#[component]\npub fn RadarSpinner(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n) -> impl IntoView {\n    let class = create_memo(move |_| {\n        tw_merge!(\n            \"animate-radarSpin\",\n            \"flex overflow-hidden absolute top-1/2 right-1/2 z-40 justify-center items-end bg-transparent h-[5px] w-[400px]\",\n            class()\n        )\n    });\n\n    view! {\n        <div {..attributes} class=class style=\"transform-origin:right center\">\n            <div class=\"relative z-40 w-full bg-gradient-to-r from-transparent to-transparent h-[1px] via-sky-600\" />\n        </div>\n    }\n}\n"
    }
  ],
  "type": "components:ui/",
  "type_short": "components:ui"
}