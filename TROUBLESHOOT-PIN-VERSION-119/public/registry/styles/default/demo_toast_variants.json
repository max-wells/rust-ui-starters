{
  "name": "demo_toast_variants",
  "cargo_dependencies": [],
  "files": [
    {
      "name": "demo_toast_variants.rs",
      "content": "use leptos::*;\n\nuse crate::{\n    components::toaster_custom::{\n        toast::{Toast, ToastVariant},\n        toast_id::ToastId,\n        toaster::Toaster,\n        types::Toasts,\n    },\n    registry::ui::button::{Button, ButtonVariant},\n};\n\n#[component]\npub fn DemoToastVariants() -> impl IntoView {\n    view! {\n        <Toaster>\n            <Demo />\n        </Toaster>\n    }\n}\n\n#[component]\nfn Demo() -> impl IntoView {\n    let toast_context = expect_context::<Toasts>();\n\n    let create_toast = |variant: ToastVariant| {\n        move |_| {\n            let toast_id = ToastId::new();\n            toast_context.toast(\n                view! {\n                    <Toast\n                        toast_id\n                        variant=variant\n                        title=view! { \"Title\" }.into_view()\n                        description=Some(view! { \"Description\" }.into_view())\n                    />\n                },\n                Some(toast_id),\n                None,\n            );\n        }\n    };\n\n    let create_info_toast = create_toast(ToastVariant::Destructive);\n    let create_warning_toast = create_toast(ToastVariant::Warning);\n    let create_success_toast = create_toast(ToastVariant::Success);\n\n    view! {\n        <div class=\"flex flex-wrap gap-4 mx-auto\">\n            <Button on:click=create_info_toast variant=ButtonVariant::Destructive>\n                \"Destructive Toast\"\n            </Button>\n            <Button on:click=create_warning_toast variant=ButtonVariant::Warning>\n                \"Warning Toast\"\n            </Button>\n            <Button on:click=create_success_toast variant=ButtonVariant::Success>\n                \"Success Toast\"\n            </Button>\n        </div>\n    }\n}\n"
    }
  ],
  "type": "components:demos/demo_core",
  "type_short": "components:demos"
}