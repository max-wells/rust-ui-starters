{
  "name": "demo_gallery_zoom",
  "cargo_dependencies": [],
  "files": [
    {
      "name": "demo_gallery_zoom.rs",
      "content": "use leptos::*;\nuse leptos_meta::Stylesheet;\nuse tailwind_fuse::*;\n\n#[component]\npub fn DemoGalleryZoom() -> impl IntoView {\n    view! {\n        <Stylesheet id=\"gallery-zoom\" href=\"/components/gallery-zoom.css\" />\n\n        <GalleryGrid class=\"p-2 border border-sky-500\">\n            <GalleryList class=\"grid fixed p-0 m-0 galleryList top-[50%] left-[50%]\">\n                {ALL_ITEMS\n                    .iter()\n                    .enumerate()\n                    .map(|(index, style)| {\n                        view! {\n                            <GalleryItem class=\"galleryItem\" style=*style>\n                                <GalleryItemImage index=index />\n                            </GalleryItem>\n                        }\n                    })\n                    .collect::<Vec<_>>()}\n            </GalleryList>\n        </GalleryGrid>\n    }\n}\n\n/*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n/*                      ✨ CONSTANTS ✨                       */\n/*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\nconst ALL_ITEMS: &[&str] = &[\n    \"--x1: 2; --x2: 6; --y1: 1; --y2: 4;\",\n    \"--x1: 6; --x2: 8; --y1: 2; --y2: 4;\",\n    \"--x1: 1; --x2: 4; --y1: 4; --y2: 7;\",\n    \"--x1: 4; --x2: 7; --y1: 4; --y2: 7;\",\n    \"--x1: 7; --x2: 9; --y1: 4; --y2: 6;\",\n    \"--x1: 2; --x2: 4; --y1: 7; --y2: 9;\",\n    \"--x1: 4; --x2: 7; --y1: 7; --y2: 10;\",\n    \"--x1: 7; --x2: 10; --y1: 6; --y2: 9;\",\n];\n\n/*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n/*                     ✨ FUNCTIONS ✨                        */\n/*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n#[component]\npub fn GalleryGrid(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| {\n        tw_merge!(\n            \"grid overflow-hidden overflow-x-hidden place-items-center w-full min-h-screen\",\n            class()\n        )\n    });\n\n    view! {\n        <div {..attributes} class=class>\n            {children()}\n        </div>\n    }\n}\n\n#[component]\npub fn GalleryList(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n) -> impl IntoView {\n    let class = create_memo(move |_| tw_merge!(\"\", class()));\n\n    view! {\n        <ul {..attributes} class=class>\n            {children()}\n        </ul>\n    }\n}\n\n#[component]\npub fn GalleryItem(\n    #[prop(into, optional)] class: MaybeSignal<String>,\n    #[prop(attrs)] attributes: Vec<(&'static str, Attribute)>,\n    children: Children,\n    #[prop(into)] style: MaybeSignal<String>,\n) -> impl IntoView {\n    let class = create_memo(move |_| tw_merge!(\"\", class()));\n\n    view! {\n        <li {..attributes} class=class style=style>\n            {children()}\n        </li>\n    }\n}\n\n#[component]\npub fn GalleryItemImage(index: usize) -> impl IntoView {\n    view! {\n        <img\n            class=\"object-cover absolute galleryGridImage top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%] min-w-[200%] h-[200%]\"\n            src=format!(\"https://picsum.photos/600/600?random={}\", index + 1)\n            alt=\"\"\n        />\n    }\n}\n"
    }
  ],
  "type": "components:demos/demo_extensions",
  "type_short": "components:demos"
}