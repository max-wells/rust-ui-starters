{
  "name": "checkbox",
  "cargo_dependencies": [],
  "files": [
    {
      "name": "checkbox.rs",
      "content": "use leptos::*;\nuse tailwind_fuse::*;\n\nuse crate::registry::ui::_shared::STYLES;\n\n#[component]\npub fn Checkbox(\n    #[prop(optional, into)] id: String,\n    #[prop(optional, into)] class: String,\n    #[prop(optional)] checked: bool,\n    #[prop(optional)] disabled: bool,\n    #[prop(optional)] on_change: Option<Box<dyn Fn(bool)>>,\n) -> impl IntoView {\n    let (is_checked, set_is_checked) = create_signal(checked);\n\n    let checkbox_class = tw_merge!(\n        STYLES.RING_OFFSET_BG,\n        STYLES.DISABLED_NOT_ALLOWED,\n        STYLES.FOCUS_VISIBLE_RING,\n        STYLES.BORDER_PRIMARY,\n        STYLES.CHECKBOX_DATA_STATE_PRIMARY,\n        \"peer size-4 shrink-0 rounded-sm\",\n        class\n    );\n\n    let indicator_class = tw_merge!(\"text-current\", STYLES.SIZE_FULL);\n\n    view! {\n        <div\n            class=checkbox_class\n            data-state=move || if is_checked() { \"checked\" } else { \"unchecked\" }\n            on:click=move |_| {\n                if !disabled {\n                    set_is_checked.update(|v| *v = !*v);\n                    if let Some(f) = on_change.as_ref() {\n                        f(is_checked());\n                    }\n                }\n            }\n        >\n            <input\n                id=id\n                type=\"checkbox\"\n                class=\"sr-only\"\n                prop:checked=is_checked\n                disabled=disabled\n            />\n            <div class=indicator_class>\n                {move || {\n                    if is_checked() {\n                        Some(\n                            view! {\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    stroke-width=\"2\"\n                                    stroke-linecap=\"round\"\n                                    stroke-linejoin=\"round\"\n                                    class=\"w-4 h-4\"\n                                >\n                                    <polyline points=\"20 6 9 17 4 12\"></polyline>\n                                </svg>\n                            },\n                        )\n                    } else {\n                        None\n                    }\n                }}\n            </div>\n        </div>\n    }\n}\n"
    }
  ],
  "type": "components:ui/",
  "type_short": "components:ui"
}